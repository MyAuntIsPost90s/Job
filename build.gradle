buildscript {
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.0.3.RELEASE"
    }
}

apply plugin: 'java-library'
apply plugin: 'war'
apply plugin: 'org.springframework.boot'

group 'com.bs.job'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

bootJar {
    baseName = 'JobGateway'
    version = '1.0.0'
    manifest {
        attributes 	"Manifest-Version": 1.0,
                'Start-Class': 'com.bs.job.AppStart'
    }
}

bootWar {
    baseName = 'JobGateway'
    manifest {
        attributes 	"Manifest-Version": 1.0,
                'Start-Class': 'com.bs.job.AppStart'
    }
}

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
}

//配置资源路径
sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resource'
        }
    }
}

configurations{
    //编译期排除slf4j-log4j12
    compile.exclude module: 'slf4j-log4j12'
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

    //druid
    compile 'com.alibaba:druid-spring-boot-starter:1.1.10'

    //spring-boot
    compile 'org.springframework.boot:spring-boot-starter:2.0.3.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-web:2.0.3.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-parent:2.0.3.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-jdbc:2.0.3.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-log4j:1.3.8.RELEASE'

    //dubbo
    compile 'org.jboss.netty:netty:3.2.5.Final'
    compile 'com.101tec:zkclient:0.3'
    compile 'org.apache.curator:curator-recipes:4.0.0'
    compile 'org.apache.zookeeper:zookeeper:3.5.2-alpha'
    compile 'com.alibaba:dubbo:2.6.1'

    //mybatise
    compile 'org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2'
    compile 'com.github.miemiedev:mybatis-paginator:1.2.17'

    //mysql-connector
    compile 'mysql:mysql-connector-java:5.1.38'

    //json
    compile 'com.alibaba:fastjson:1.2.8'

    //img thumbnailator
    compile 'net.coobird:thumbnailator:0.4.8'

    //bcprov
    compile 'org.bouncycastle:bcprov-jdk15on:1.60'
    compile 'commons-codec:commons-codec:1.5'

    //xml
    compile 'jdom:jdom:1.1'

    //poi
    compile 'org.apache.poi:poi:3.17'
    
    //spring-websocket
    compile 'org.springframework.boot:spring-boot-starter-websocket:2.1.4.RELEASE'

    compile files('src/main/webapp/WEB-INF/lib/lingshi_base.jar') //未加入maven中央库,需要手动加到本地仓库
    compile files('src/main/webapp/WEB-INF/lib/websocket.jar')
}

//Task
configurations {
    mybatisGenerator
}
dependencies {
    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.2'
    mybatisGenerator 'mysql:mysql-connector-java:5.1.36'
    mybatisGenerator files('src/main/webapp/WEB-INF/lib/lingshi_base.jar')
}
task mybatisGenerator {
    doLast {
        def properties = new Properties()
        file("src/main/resource/mybatis/generator/config.properties").withInputStream {
            inputStream ->  properties.load(inputStream)
        }
        ant.properties['targetProject'] = projectDir.path
        ant.properties['driverClass'] = properties.getProperty("driverClass")
        ant.properties['connectionURL'] = properties.getProperty("connectionURL")
        ant.properties['userId'] = properties.getProperty("userId")
        ant.properties['password'] = properties.getProperty("password")
        ant.properties['srcMainJava'] = projectDir.path + '/src/main/java'
        ant.properties['srcMainResource'] = projectDir.path + '/src/main/resource'
        ant.properties['modelPackage'] = properties.getProperty("modelPackage")
        ant.properties['clientPackage'] = properties.getProperty("clientPackage")
        ant.properties['mapperPackage'] = properties.getProperty("mapperPackage")
        ant.taskdef(
                name:'mbgenerator',
                classname:'org.mybatis.generator.ant.GeneratorAntTask',
                classpath:configurations.mybatisGenerator.asPath
        )
        ant.mbgenerator(overwrite:true,configfile:projectDir.path+'/src/main/resource/mybatis/generator/generatorConfig.xml',verbose:true) {
            propertyset {
                propertyref(name:'targetProject')
                propertyref(name:'driverClass')
                propertyref(name:'connectionURL')
                propertyref(name:'userId')
                propertyref(name:'password')
                propertyref(name:'srcMainJava')
                propertyref(name:'srcMainResource')
                propertyref(name:'modelPackage')
                propertyref(name:'clientPackage')
                propertyref(name:'mapperPackage')
            }
        }
    }
}

